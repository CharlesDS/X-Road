/**
 * The MIT License
 *
 * Copyright (c) 2019- Nordic Institute for Interoperability Solutions (NIIS)
 * Copyright (c) 2018 Estonian Information System Authority (RIA),
 * Nordic Institute for Interoperability Solutions (NIIS), Population Register Centre (VRK)
 * Copyright (c) 2015-2017 Estonian Information System Authority (RIA), Population Register Centre (VRK)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package org.niis.xroad.centralserver.database.entity;
// Generated Feb 16, 2021 11:14:33 AM by Hibernate Tools 5.4.20.Final

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import java.util.HashSet;
import java.util.Set;

/**
 * ApprovedCas generated by hbm2java
 */
@Entity
@Table(name = "approved_cas")
public class ApprovedCa extends AuditableEntity {
    static final String TABLE_NAME = "approved_cas";

    private int id;
    private CaInfo caInfo;
    private String name;
    private Boolean authenticationOnly;
    private String identifierDecoderMemberClass;
    private String identifierDecoderMethodName;
    private String certProfileInfo;
    //this is the set of intermediate CAs
    private Set<CaInfo> intermediateCaInfos = new HashSet<CaInfo>(0);

    public ApprovedCa() {
    }

    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = TABLE_NAME + "_id_seq")
    @SequenceGenerator(name = TABLE_NAME + "_id_seq", sequenceName = TABLE_NAME + "_id_seq", allocationSize = 1)
    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @OneToOne(fetch = FetchType.LAZY, cascade = CascadeType.ALL, orphanRemoval = true)
    @JoinColumn(name = "top_ca_id")
    public CaInfo getCaInfo() {
        return this.caInfo;
    }

    public void setCaInfo(CaInfo caInfo) {
        this.caInfo = caInfo;
    }

    @Column(name = "name")
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "authentication_only")
    public Boolean getAuthenticationOnly() {
        return this.authenticationOnly;
    }

    public void setAuthenticationOnly(Boolean authenticationOnly) {
        this.authenticationOnly = authenticationOnly;
    }

    @Column(name = "identifier_decoder_member_class")
    public String getIdentifierDecoderMemberClass() {
        return this.identifierDecoderMemberClass;
    }

    public void setIdentifierDecoderMemberClass(String identifierDecoderMemberClass) {
        this.identifierDecoderMemberClass = identifierDecoderMemberClass;
    }

    @Column(name = "identifier_decoder_method_name")
    public String getIdentifierDecoderMethodName() {
        return this.identifierDecoderMethodName;
    }

    public void setIdentifierDecoderMethodName(String identifierDecoderMethodName) {
        this.identifierDecoderMethodName = identifierDecoderMethodName;
    }

    @Column(name = "cert_profile_info")
    public String getCertProfileInfo() {
        return this.certProfileInfo;
    }

    public void setCertProfileInfo(String certProfileInfo) {
        this.certProfileInfo = certProfileInfo;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "approvedCa", cascade = CascadeType.ALL, orphanRemoval = true)
    public Set<CaInfo> getIntermediateCaInfos() {
        return this.intermediateCaInfos;
    }

    public void setIntermediateCaInfos(Set<CaInfo> caInfos) {
        this.intermediateCaInfos = caInfos;
    }

}


