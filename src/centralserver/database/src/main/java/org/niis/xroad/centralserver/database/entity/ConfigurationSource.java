/**
 * The MIT License
 *
 * Copyright (c) 2019- Nordic Institute for Interoperability Solutions (NIIS)
 * Copyright (c) 2018 Estonian Information System Authority (RIA),
 * Nordic Institute for Interoperability Solutions (NIIS), Population Register Centre (VRK)
 * Copyright (c) 2015-2017 Estonian Information System Authority (RIA), Population Register Centre (VRK)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package org.niis.xroad.centralserver.database.entity;
// Generated Feb 16, 2021 11:14:33 AM by Hibernate Tools 5.4.20.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * ConfigurationSources generated by hbm2java
 */
@Entity
@Table(name = ConfigurationSource.TABLE_NAME,
        uniqueConstraints = @UniqueConstraint(columnNames = {"source_type", "ha_node_name"}))
public class ConfigurationSource {
    static final String TABLE_NAME = "configuration_sources";

    private int id;
    private ConfigurationSigningKey configurationSigningKey;
    private String sourceType;
    private byte[] anchorFile;
    private String anchorFileHash;
    private Date anchorGeneratedAt;
    private String haNodeName;
    private Set<ConfigurationSigningKey> configurationSigningKeys = new HashSet<>(0);

    public ConfigurationSource() {
        //JPA
    }

    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = TABLE_NAME + "_id_seq")
    @SequenceGenerator(name = TABLE_NAME + "_id_seq", sequenceName = TABLE_NAME + "_id_seq", allocationSize = 1)
    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "active_key_id")
    public ConfigurationSigningKey getActiveConfigurationSigningKey() {
        return this.configurationSigningKey;
    }

    public void setActiveConfigurationSigningKey(ConfigurationSigningKey activeKey) {
        this.configurationSigningKey = activeKey;
    }

    @Column(name = "source_type")
    public String getSourceType() {
        return this.sourceType;
    }

    public void setSourceType(String sourceType) {
        this.sourceType = sourceType;
    }

    @Column(name = "anchor_file")
    public byte[] getAnchorFile() {
        return this.anchorFile;
    }

    public void setAnchorFile(byte[] anchorFile) {
        this.anchorFile = anchorFile;
    }

    @Column(name = "anchor_file_hash")
    public String getAnchorFileHash() {
        return this.anchorFileHash;
    }

    public void setAnchorFileHash(String anchorFileHash) {
        this.anchorFileHash = anchorFileHash;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "anchor_generated_at")
    public Date getAnchorGeneratedAt() {
        return this.anchorGeneratedAt;
    }

    public void setAnchorGeneratedAt(Date anchorGeneratedAt) {
        this.anchorGeneratedAt = anchorGeneratedAt;
    }

    @Column(name = "ha_node_name")
    public String getHaNodeName() {
        return this.haNodeName;
    }

    public void setHaNodeName(String haNodeName) {
        this.haNodeName = haNodeName;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "configurationSource")
    public Set<ConfigurationSigningKey> getConfigurationSigningKeys() {
        return this.configurationSigningKeys;
    }

    public void setConfigurationSigningKeys(Set<ConfigurationSigningKey> configurationSigningKeys) {
        this.configurationSigningKeys = configurationSigningKeys;
    }

}


